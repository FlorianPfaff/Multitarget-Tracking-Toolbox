name: Run MATLAB Tests on GitHub-Hosted Runner

permissions: read-all

on: # yamllint disable-line rule:truthy
  push:
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    name: Checkout, Compile and Test
    runs-on: ubuntu-latest
    permissions:
      checks: write
      pull-requests: write

    steps:
      - name: Check out FilterEvaluationFramework repository
        uses: actions/checkout@v3
        with:
          path: Multitarget-Tracking-Toolbox

      - name: Check out libDirectional repository
        uses: actions/checkout@v3
        with:
          repository: libDirectional/libDirectional
          path: libDirectional

      - name: Set up MATLAB
        uses: matlab-actions/setup-matlab@v1

      - name: Add lib directory to path and compile
        uses: matlab-actions/run-command@v1
        with:
          command: "addpath(genpath('libDirectional')); compileAll;"

      - name: Run tests in Multitarget-Tracking-Toolbox/tests
        uses: matlab-actions/run-tests@v1
        with:
          test-results-junit: test-results/results.xml
          code-coverage-cobertura: code-coverage/coverage.xml
          source-folder: Multitarget-Tracking-Toolbox;libDirectional/lib
          select-by-folder: Multitarget-Tracking-Toolbox/tests
        
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results/results.xml

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Or another version if needed

      - name: Display coverage.xml after modifications
        run: cat code-coverage/coverage.xml
  
      - name: Remove libDirectional from coverage.xml and recalculate coverage
        run: |
          echo "Installing lxml..."
          pip install lxml
          
          echo "Modifying coverage.xml..."
          python - << END
          import lxml.etree as ET

          tree = ET.parse('code-coverage/coverage.xml')
          root = tree.getroot()

          total_lines = 0
          total_covered = 0

          for class_ in root.findall(".//class"):
              filename = class_.get('filename')
              if filename.startswith('libDirectional'):
                  class_.getparent().remove(class_)
              else:
                  for line in class_.findall('.//line'):
                      total_lines += 1
                      if int(line.get('hits')) > 0:
                          total_covered += 1

          # Recalculate coverage percentage
          coverage = (total_covered / total_lines) * 100 if total_lines != 0 else 0

          # Update the root element's attributes
          coverage_node = root.find('.//coverage')
          if coverage_node is not None:
              coverage_node.set('lines-valid', str(total_lines))
              coverage_node.set('lines-covered', str(total_covered))
              coverage_node.set('line-rate', str(coverage))

          tree.write('code-coverage/coverage.xml')
          END

      - name: Display coverage.xml after modifications
        run: cat code-coverage/coverage.xml

      - name: Publish Code Coverage Results
        uses: 5monkeys/cobertura-action@master
        if: always()
        with:
          path: code-coverage/coverage.xml
          minimum_coverage: 20